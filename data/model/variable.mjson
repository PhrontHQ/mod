{
    "root": {
        "prototype": "core/meta/module-object-descriptor",
        "values": {
            "name": "Variable",
            "propertyDescriptors": [
                {"@": "name"},
                {"@": "displayName"},
                {"@": "type"},
                {"@": "valueExpression"},
                {"@": "valueExpressionScope"}
            ],
            "objectDescriptorModule": {
                "%":"./variable.mjson"
            },
            "exportName": "Variable",
            "module": {
                "%": "./variable"
            },
            "object":{"@": "variable"},
            "parent":{"@": "IntangibleDescriptor"}

        }
    },
    "variable": {
        "object": "./variable"
    },
    "IntangibleDescriptor": {
        "object": "data/model/party/intangible.mjson"
    },
    "name": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "name",
            "isLocalizable": true,
            "valueType": "string",
            "description": "A short, non user-facing name to refer to the variable"
        }
    },
    "displayName": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "displayName",
            "isLocalizable": true,
            "valueType": "string",
            "description": "User-facing name of the variable"
        }
    },
    "type": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "type",
            "valueDescriptor": {"@": "typeDescriptor"},
            "description": "If set, it's the objectDescriptor / type of the value the variable is representing. a 'User' variable would be a Person's object descriptor"
        }
    },
    "typeDescriptor": {
        "object": "core/meta/module-object-descriptor.mjson"
    },
    "valueExpression": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "valueExpression",
            "valueType": "string",
            "description": "The expression to evaluate on valueExpressionScope object to evaluate the variable's value"
        }
    },
    "DataObjectDescriptor": {
        "object": "data/model/data-object.mjson"
    },
    "valueExpressionScope": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "valueExpressionScope",
            "cardinality": 1,
            "valueType": "object",
            "valueDescriptor": {"@": "DataObjectDescriptor"},
            "description": "The scope object, high level, to be secialized, on which the expression is to be evaluated to produce a value for this variable"
        }
    }

}
