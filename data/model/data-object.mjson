{
    "root": {
        "prototype": "core/meta/module-object-descriptor",
        "values": {
            "name": "DataObject",
            "propertyDescriptors": [
                {"@": "fullModuleId"},
                {"@": "date"},
                {"@": "originId"},
                {"@": "originDataSnapshot"},
                {"@": "description"},
                {"@": "isType"},
                {"@": "type"},
                {"@": "subtypes"},
                {"@": "typeInstances"},
                {"@": "isTemplate"},
                {"@": "template"},
                {"@": "templateName"},
                {"@": "templateDescription"},
                {"@": "templateInstances"},
                {"@": "existenceTimeRange"},
                {"@": "creationDate"},
                {"@": "creatorIdentity"},
                {"@": "modificationDate"},
                {"@": "modderIdentity"},
                {"@": "publicationDate"},
                {"@": "publisherIdentity"},
                {"@": "isReadOnly"}
            ],
            "objectDescriptorModule": {
                "%": "./data-object.mjson"
            },
            "exportName": "DataObject",
            "module": {
                "%": "./data-object"
            },
            "parent":{"@": "MontageObjectDescriptor"}
        }
    },

    "MontageObjectDescriptor": {
        "object": "core/montage.mjson"
    },

    "fullModuleId": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "fullModuleId",
            "valueType": "string",
            "description": "The moduleId of the object descriptor for that instance"
        }
    },

    "type": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "type",
            "valueDescriptor": {"@": "root"},
            "inversePropertyName": "typeInstances",
            "description": "The reference to what would be an object's prototype in JavaScript: A unique instance of parent class that defines common characteristics for all objects of that type"
        }
    },

    "isType": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "isType",
            "valueType": "boolean",
            "defaultValue": false,
            "isSearchable": true,
            "description": "If true, indicates that an instance is used by others as their type, which is the equivalent of the role of the prototype in JavaScript: an object one derived from"
        }
    },

    "typeInstances": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "typeInstances",
            "valueType": "array",
            "cardinality": -1,
            "inversePropertyName": "type",
            "valueDescriptor": {"@": "root"},
            "description": "All instances of that class that have the same type and that are not used as type, meaning the value of their property 'isType' is false"
        }
    },

    "subtypes": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "subtypes",
            "valueType": "array",
            "cardinality": -1,
            "valueDescriptor": {"@": "root"},
            "definition": "typeInstances.filter{isType==true}",
            "description": "All instances of this class and or subclasses that are also used as types"
        }
    },

    "date": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "date",
            "valueDescriptor": {"@": "DateDescriptor"},
            "isSerializable": false,
            "description": "The current date at all time, potentially time-shifted globally at the app level. Returns Date.date"
        }
    },

    "originId": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "originId",
            "valueType": "string",
            "isUnique": true,
            "isSearchable": true,
            "description": "The primaryKey from a different system a Data Object may have come from originally"
        }
    },

    "originDataSnapshot": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "originDataSnapshot",
            "valueType": "object",
            "isUnique": true,
            "isSearchable": false,
            "description": "Stores the latest known data snapshot from an origin service it was imported from. An entry per origin data service contains the data snapshot from that origin. originDataSnapshot can eventually be on the larger side, and as we typically won't search through it, we're not making it searcheable"
        }
    },

    "description": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "description",
            "valueType": "string",
            "isLocalizable": true,
            "isSearchable": true
        }
    },

    "isTemplate": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "isTemplate",
            "valueType": "boolean",
            "defaultValue": false,
            "isSearchable": true,
            "description": "If true, indicates that an instance is used by others as a source of default values"
        }
    },

    "template": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "template",
            "valueDescriptor": {"@": "root"},
            "description": "The reference to another object of the same class that acts as a template, providing default values"
        }
    },

    "templateName": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "templateName",
            "isLocalizable": true,
            "isUnique": true,
            "valueType": "string",
            "description": "A name to be used when an object is created to be a template for others"
        }
    },

    "templateDescription": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "templateDescription",
            "isLocalizable": true,
            "valueType": "string",
            "description": "Explanations of the role, context, added value... a template has for others"
        }
    },

    "templateInstances": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "templateInstances",
            "valueType": "array",
            "cardinality": -1,
            "inversePropertyName": "template",
            "valueDescriptor": {"@": "root"},
            "description": "All instances of that class that use this object as their template"
        }
    },


    "range_descriptor": {
        "object": "core/range.mjson"
    },
    "existenceTimeRange": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "existenceTimeRange",
            "valueType": "date",
            "cardinality": 1,
            "valueDescriptor": {"@": "range_descriptor"},
            "description": "Everything has a beginning and an end. This represnet the lifespan of the real-world object modeled. For a Person it would be that date of birth amd of death. The creationDate is when the digital object representing that person was created. Different"
        }
    },

    "DateDescriptor": {
        "object": "core/date.mjson"
    },
    "creationDate": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "creationDate",
            "valueDescriptor": {"@": "DateDescriptor"},
            "mandatory": true,
            "description": "The time a data object was created, from a programmatic stand point. We're missing the date the object is deleted / descactivated / decommisioned as we wouldn't delete it physically anymore. Which could also means removing from the main branch and move it to the 'void'/deleted branch"
        }
    },

    "UserIdentityDescriptor": {
        "object": "./app/user-identity.mjson"
    },

    "creatorIdentity": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "creatorIdentity",
            "valueDescriptor": {"@": "UserIdentityDescriptor"},
            "description": "The identity of the user or agent who created the object"
        }
    },

    "modificationDate": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "modificationDate",
            "valueDescriptor": {"@": "DateDescriptor"},
             "mandatory": true
       }
    },

    "modderIdentity": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "modderIdentity",
            "valueDescriptor": {"@": "UserIdentityDescriptor"},
            "description": "The identity of the last user or agent who modified the object"
        }
    },


   "publicationDate": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "publicationDate",
            "valueDescriptor": {"@": "DateDescriptor"}
        }
    },

    "publisherIdentity": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "publisherIdentity",
            "valueDescriptor": {"@": "UserIdentityDescriptor"},
            "description": "The identity of the last user or agent who published the object"
        }
    },

    "isReadOnly": {
        "prototype": "core/meta/property-descriptor",
        "values": {
            "name": "isReadOnly",
            "valueType": "boolean",
            "isSerializable": false,
            "defaultValue": false
        }
    }

}
